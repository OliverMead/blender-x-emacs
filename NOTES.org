#+title: Notes and references for true Blender x Emacs integration
#+author: Oliver J. Mead <olivermead@olivermead.xyz>

* Existing Solutions
+ Blender Python editing and REPL/Console: [[https://github.com/emacsattic/blender-python-mode][blender-python-mode]]
+ Blender render job dispatch for multiple instances: [[https://www.youtube.com/watch?v=H-5VbYxTsao][Emacs can make your Blender Better! - Rocknight Studios]]
+ Blender Command Port for VSCode/PyCharm: [[https://github.com/p4vv37/blender_command_port][blender_command_port]]
  + hwpplayer1's fork of the above: [[https://github.com/masscollaborationlabs/blender_command_port][blender_command_port:fork]],
    which has a small fix to work with the latest versions of blender (>=2.93)
  + [[https://github.com/p4vv37/blender_command_port/pull/20][Our pull request to send our changes upstream]]

* Correspondence
** Emacs IRC
#+begin_quote
 olivermead │ hwpplayer1: well scripting is all that's currently possible. But running said script you have to go back to blender and reload it. It would be nice to be able to link into a part of a blender project with org-mode, see object tree / spreadsheet, dispatch render jobs. All with emacs bindings
 
 olivermead │ but imagine using emacs's editing features on the object tree like one would use dired, writing notes with an org-capture template that link to points in node trees, render settings, or camera POVs
#+end_quote

** Blender IRC
#+begin_quote
 olivermead │ Hello, a fellow emacs user and I are looking to create an extension, or pair of extensions, to bring strong integration for blender in emacs. (view and edit object trees / spreadsheets, link into blender projects with org-mode and org-capture, write and run bpy scripts - although that has some existing solutions). Would it be feasible to achieve these goals by hooking into the blender python REPL/Console ? Are there any recent attempts

 olivermead │ at something similar? There exists https://github.com/emacsattic/blender-python-mode - but it has not been updated in over a decade, and focused mostly on script editing

 intrac │ olivermead: I'm not familiar with some of those elements like org-mode/org-capture

 intrac │ but perhaps you could have some sort of link using a script within Blender, which then accepts input from external sources (eg emacs)

 intrac │ there's also a Blender as a Python module: https://wiki.blender.org/wiki/Building_Blender/Other/BlenderAsPyModule

 olivermead │ intrac: that's ok, they're emacs specific. The main thing is whether the python repl of blender would be sufficient to create links into a blender project (by some object hierarchy that can be inspected later)

 intrac │ although that's not officially supported and I don't know what the current status of it is

 intrac │ also, I have some vague memory that some parts of Blender's API might require Blender to be running graphically in order to function

 olivermead │ blender as a python module would probably not be the way to go here, as the idea is to supplement the existing blender UI with emacs's editing power

 intrac │ ah ok

 olivermead │ intrac: keeping blender running is the intention, yes

 intrac │ but I'd guess this could be done in two steps, first have some method to issue Blender API commands externally

 intrac │ then some extra translation layer to have it interact with emacs seamlessly

 olivermead │ that I was hoping to use the REPL for, since it would kill two birds with one stone (allow users to directly use the repl as well)

 intrac │ Python standard shell? I'm not sure how that would interact with a running Blender instance directly

 intrac │ since the Py interpreter in Blender is essentially standalone, afaik

 olivermead │ The blender console, I believe there's a VSCode extension that uses it
#+end_quote
